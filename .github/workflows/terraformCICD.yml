# .github/workflows/terraform-cicd.yml

name: Terraform CI/CD

on:
  push:
    branches:
      - main  # Or your desired deployment branch

permissions:
  id-token: write
  contents: read

jobs:
  terraform:
    name: Terraform
    runs-on: ubuntu-latest
    environment: production  # Or the environment you want to deploy to (e.g., staging)

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.8.1  # Specify the Terraform version (e.g., 1.3.0)

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-south-1

      - name: Terraform Init
        run: terraform init

      - name: Terraform Plan
        run: terraform plan
        continue-on-error: true # If you want to continue even if the plan fails (for logging purposes)

      - name: Terraform Apply
        run: terraform apply -auto-approve

      - name: Install jq
        run: sudo apt-get install -y jq

      - name: Get ALB DNS Name
        run: |
          echo "ALB_DNS_NAME=$(terraform output -json alb_dns_name | jq -r '.value')" >> $GITHUB_ENV
          echo "Fetched ALB DNS Name: ${{ env.ALB_DNS_NAME }}"

      - name: Update Website HTML
        run: sed -i "s/YOUR_PLACEHOLDER_LINK/${{ env.ALB_DNS_NAME }}/g" your_website/index.html # Adjust the path to your index.html file

      - name: Deploy Updated Website
        run: aws s3 cp your_website s3://my-tf-hypha-ritchie-bucket  --recursive